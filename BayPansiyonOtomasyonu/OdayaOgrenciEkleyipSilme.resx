<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AADwdp3Of2kFSLVMxPFCAAAAAElFTkSuQmCC
</value>
  </data>
</root>